/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

#define D1 &mt PIPE EQUAL                         // | when tapped, = when  held
#define D2 &mt AMPS DOLLAR                        // $ when tapped, & when  held
#define D3 &kp DOT                                // . when tapped
#define D4 &mt COLON SEMI                         // ; when tapped, : when  held
#define D5 &mt UNDERSCORE COMMA                   // , when tapped, _ when  held
#define D6 &mt SINGLE_QUOTE DOUBLE_QUOTES         // ' when tapped, " when  held
#define D7 &mt LESS_THAN LEFT_BRACE               // { when tapped, < when  held
#define D8 &mt LEFT_BRACKET LEFT_PARENTHESIS      // ) when tapped, ] when  held
#define D9 &mt RIGHT_BRACKET RIGHT_PARENTHESIS    // ( when tapped, [ when  held
#define D10 &mt GREATER_THAN RIGHT_BRACE          // } when tapped, > when  held
#define D11 &mt CARET TILDE                       // ^ when tapped, ~ when  held
#define D12 &mt EXCLAMATION QUESTION              // ? when tapped, ! when  held
#define D13 &mt GRAVE HASH                        // # when tapped, ` when  held
#define D14 &mt ASTERISK KP_PLUS                  // + when tapped, * when  held
#define D15 &mt SLASH KP_MINUS                    // - when tapped, / when  held
#define D16 &kp KP_SLASH                          // / when tapped
#define D17 &kp BACKSLASH                         // \ when tapped
// layers
#define DEFAULT      0
#define UTIL         1
#define QWERTZ       2
#define DOVRAK       3
#define DOVRAK_LOWER 4
#define LOWER        5
#define MACRO        6
#define MAGIC        7
//#define FACTORY_TEST 8

&mt {
    tapping-term-ms = <400>;
};

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };

//        lower_dov: tap_dance_1 {
//            compatible = "zmk,behavior-tap-dance";
//            label = "LAYER_TAP_DANCE";
//            #binding-cells = <0>;
//            tapping-term-ms = <200>;
//            bindings = <&mo DOVRAK_LOWER>, <&tog DOVRAK_LOWER>;
//        };
//
//        left: tap_dance_2 {
//            compatible = "zmk,behavior-tap-dance";
//            label = "LAYER_TAP_DANCE";
//            #binding-cells = <0>;
//            tapping-term-ms = <200>;
//            bindings = <&kp LEFT>, <&kp LC(LEFT)>;
//        };
//        right: tap_dance_3 {
//            compatible = "zmk,behavior-tap-dance";
//            label = "LAYER_TAP_DANCE";
//            #binding-cells = <0>;
//            tapping-term-ms = <200>;
//            bindings = <&kp RIGHT>, <&kp LC(RIGHT)  >;
//        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
         //DOVRAK KEYS
         DTEST: DTEST {
             compatible = "zmk,behavior-macro";
             #binding-cells = <0>;
             bindings =
                <D1>,
                <D2>,
                <D3>,
                <D4>,
                <D5>,
                <D6>,
                <D7>,
                <D8>,
                <D9>,
                <D10>,
                <D11>,
                <D12>,
                <D13>,
                <D14>,
                <D15>,
                <D16>,
                <D17>;
         };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ----------------------------------------------------------------------------------------------------------------------------------------------
            // |            |     |     |      | F1 F2 |                                                         | F3 F4 | F5 F6 | F7 F8 | F9 F10 | F11 F12 |
            // |            |  1  |  2  |  3   | 4     | 5 |                                                 | 6 | 7     | 8     | 9     | 0      |         |
            // |  ESC       |     |     |      |       |   |                                                 |   |       |       |       |        |         |
            // |  TAB CAPS  |     |     |      |       |   |                                                 |   |       |       |       |        |         |
            // |            |     |     |      |       |   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |   |       |       |       |        | PGUP    |
            // | MAGIC      | HOME| END | LEFT | RIGHT |   | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |   | UP    | DOWN  |       |        | PGDN    |

            bindings = <
            &tog 1         &to 2    &to 3       &kp INS     &mt F2 F1                                                                                      &mt F4 F3  &mt F6 F5      &mt F8 F7      &mt F10 F9     &mt F12 F11
            &none          &kp N1   &kp N2      &kp N3      &kp N4      &kp N5                                                                     &kp N6  &kp N7     &kp N8         &kp N9         &kp N0         &none
            &kp ESC        &none    &none       &none       &none       &none                                                                      &none   &none      &none          &none          &none          &none
            &mt CAPS TAB   &none    &none       &none       &none       &none                                                                      &none   &none      &none          &none          &none          &none
            &none          &none    &none       &none       &none       &none   &kp LSHFT   &kp LCTRL   &layer_td  &kp LGUI  &kp RCTRL &kp RSHFT   &none   &none      &none          &none          &none          &kp PG_UP
            &magic MAGIC 0 &kp HOME &kp END     &kp LEFT    &kp RIGHT           &kp BSPC    &kp DEL     &kp LALT   &kp LALT  &kp RET   &kp SPACE           &kp UP     &kp DOWN       &none          &none          &kp PG_DN
            >;
        };

         util_layer {
            // -----------------------------------------------------------------------------------------------------
            // |   |   |   |   |   |                                                           |   |   |   |   |   |
            // |   |   |   |   |   |   |                                                   |   |   |   |   |   |   |
            // |   |   |   |   |   |   |                                                   |   |   |   |   |   |   |
            // |   |   |   |   |   |   |                                                   |   |   |   |   |   |   |
            // |   |   |   |   |   |   | LSHFT |          |   | |   |              | RSHFT |   |   |   |   |   |   |
            // |   |   |   |   |   |   |       | DEL      |   | |   | CRTL-Z Enter |       |   |   |   |   |   |   |
            bindings = <
            &trans  &trans  &trans  &trans  &trans                                                                              &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans  &sk LSHFT   &trans      &trans  &trans  &trans  &sk RSHFT   &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans          &trans      &trans      &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans
            >;
         };

        qwertz_layer {
            // -------------------------------------------------------------------------------------------------------------
            // |       |     |     |     |     |                                       |       |       |     |       |     |
            // |  =    |     |     |     |     |     |                          |      |       |       |     |       |  -  |
            // |       |  Q  |  W  |  E  |  R  |  T  |                          |  Y   |   U   |   I   |  O  |   P   |  \  |
            // |       |  A  |  S  |  D  |  F  |  G  |                          |  H   |   J   |   K   |  L  |   ;   |  '  |
            // |   `   |  Z  |  X  |  C  |  V  |  B  |  |   |   |   |   |   |   |  N   |   M   |   ,   |  .  |   /   |     |
            // |       |     |     |     |     |     |  |   |   |   |   |   |   |      |       |       |  [  |   ]   |     |

            bindings = <
            &trans      &trans      &trans      &trans      &trans                                                                      &trans      &trans      &trans      &trans      &trans
            &kp EQUAL   &trans      &trans      &trans      &trans      &trans                                                  &trans  &trans      &trans      &trans      &trans      &kp MINUS
            &trans      &kp Q       &kp W       &kp E       &kp R       &kp T                                                   &kp Z   &kp U       &kp I       &kp O       &kp P       &kp BSLH
            &trans      &kp A       &kp S       &kp D       &kp F       &kp G                                                   &kp H   &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
            &kp GRAVE   &kp Y       &kp X       &kp C       &kp V       &kp B   &trans  &trans  &trans  &trans  &trans  &trans  &kp N   &kp M       &kp COMMA   &kp DOT     &kp FSLH    &trans
            &trans      &trans      &trans      &trans      &trans              &trans  &trans  &trans  &trans  &trans  &trans          &trans      &trans      &kp LBKT    &kp RBKT    &trans
            >;
        };

        dovrak_base_layer {
           // ----------------------------------------------------------------------------------------------------
           // |        |     |     |     |     |                                       |     |     |     |     |     |
           // |        |     |     |     |     |     |                           |     |     |     |     |     | ^ ~ |
           // |        | = | | $ & | .   | ; : | , _ |                           | " ' | { < | ( [ | ) ] | } > | ? ! |
           // |        | A   | O   | E   | U   | I   |                           | D   | H   | T   | N   | S   | # ` |
           // |capword | Q   | P   | Y   |     | X   |   |   |   |   |   |   |   | F   | G   | C   | R   | L   |     |
           // |        |     |     |     |     |     |   |   |   |   |   |   |   |     |     |     | + * | - / |     |
           bindings = <
           &trans      &trans      &trans      &trans      &trans                                                                             &trans      &trans      &trans      &trans      &trans
           &none       &trans      &trans      &trans      &trans             &trans                                                  &trans  &trans      &trans      &trans      &trans      D11
           &trans      D1          D2          D3          D4                 D5                                                      D6      D7          D8          D9          D10         D12
           &trans      &kp A       &kp O       &kp E       &kp U              &kp I                                                   &kp D   &kp H       &kp T       &kp N       &kp S       D13
           &caps_word  &kp Q       &kp P       &kp Y       &mo DOVRAK_LOWER   &kp X   &trans  &trans  &trans  &trans  &trans  &trans  &kp F   &kp G       &kp C       &kp R       &kp L       &trans
           &trans      &trans      &trans      &trans      &trans                     &trans  &trans  &trans  &trans  &trans  &trans          &trans      &trans      D14         D15         &trans
          >;
        };

        dovrak_base_layer_2 {
           // ----------------------------------------------------------------------------------------------------
           // |    |        |           |        |   |                                         |        |           |      |     |     |
           // |    |        |           |        |   |   |                           |         |        |           |      |     |     |
           // |    | actions| ai        |        |   |   |                           | crtl F4 |        |  /        |  \   |     |     |
           // |    | l-edit | undo      | insert |   |   |                           |         |        | run       |format| ß   |     |
           // |    | crtl x |  J        |  K     |   |   |   |   |   |   |   |   |   | B       | M      | W         | V    | Z   |     |
           // |    | ä Ä    | ö Ö       | ü Ü    |   |   |   |   |   |   |   |   |   |         |        |           |      |     |     |
             bindings = <
           &trans      &trans           &trans            &trans            &trans                                                                      &trans           &trans           &trans       &trans      &trans
           &trans      &trans           &trans            &trans            &trans   &trans                                                  &trans     &trans           &trans           &trans       &trans      &trans
           &trans      &kp LC(LS(A))    &kp LS(LA(3))     &trans            &trans   &trans                                                  &kp LC(F4) &trans           D16              D17          &trans      &trans
           &trans      &kp LC(LS(BSPC)) &kp LC(Z)         &kp LA(INS)       &trans   &trans                                                  &trans     &trans           &kp LC(LS(F10)   &kp LC(LA(L) &trans      &trans
           &trans      &kp LC(X)        &kp J             &kp K             &none    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp B      &kp M            &kp W            &kp V        &kp Z       &trans
           &trans      &trans           &trans            &trans            &trans           &trans  &trans  &trans  &trans  &trans  &trans             &trans           &trans           &trans       &trans      &trans
          >;
        };



        lower_layer {
            bindings = <
            &trans      &trans      &trans      &trans      &trans                                                                                 &trans      &trans      &trans      &trans      &trans
            &none       &trans      &trans      &trans      &trans             &trans                                                      &trans  &trans      &trans      &trans      &trans      D11
            &trans      D1          D2          D3          D4                 D5                                                          D6      D7          D8          D9          D10         D12
            &trans      &trans      &trans      &trans      &trans             &trans                                                      &trans  &trans      &trans      &trans      &trans      D13
            &caps_word  &trans      &trans      &trans      &trans             &trans  &trans  &trans  &tog LOWER  &trans  &trans  &trans  &trans  &trans      &trans      &trans      &trans      &trans
            &trans      &trans      &trans      &trans      &trans                     &trans  &trans  &trans      &trans  &trans  &trans          &trans      &trans      D14         D15         &trans
            >;
        };
//        lower_layer {
//            bindings = <
//            &kp C_BRI_DN      &kp C_BRI_UP        &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                                           &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &none           &kp PAUSE_BREAK
//            &trans            &none               &none           &none           &none           &kp HOME                                                                              &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp PSCRN
//            &trans            &none               &none           &kp UP          &none           &kp END                                                                               &kp RPAR     &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp SLCK
//            &trans            &none               &kp LEFT        &kp DOWN        &kp RIGHT       &kp PG_UP                                                                             &kp PRCNT    &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &none
//            &trans            &kp K_CMENU         &none           &kp F11         &kp F12         &kp PG_DN       &trans      &trans      &tog LOWER  &trans      &trans      &trans    &kp COMMA    &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
//            &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &trans      &trans      &trans                 &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &trans
//            >;
//        };

        macro_layer {
           // ------------------------------------------------------------------------------
           // |    |   |   |   |   |                                   |   |   |   |   |   |
           // |    |   |   |   |   |   |                           |   |   |   |   |   |   |
           // |    |   |   |   |   |   |                           |   |   |   |   |   |   |
           // |    |   |   |   |   |   |                           |   |   |   |   |   |   |
           // |    |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
           // |    |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
           bindings = <
           &trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
           >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &tog 1              &tog 2          &tog 3          &tog 4                                                                                                          &tog 5     &tog 6     &tog 7     &tog 8     &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };
        factory_test_layer {
            bindings = <
            &kp N0   &kp N6   &kp N2   &kp N8   &kp N4                                                                              &kp N4   &kp N8   &kp N2   &kp N6   &kp N0
            &kp N1   &kp N7   &kp N3   &kp N9   &kp N5   &kp N0                                                            &kp N0   &kp N5   &kp N9   &kp N3   &kp N7   &kp N1
            &kp N2   &kp N8   &kp N4   &kp N0   &kp N6   &kp N1                                                            &kp N1   &kp N6   &kp N0   &kp N4   &kp N8   &kp N2
            &kp N3   &kp N9   &kp N5   &kp N1   &kp N7   &kp N2                                                            &kp N2   &kp N7   &kp N1   &kp N5   &kp N9   &kp N3
            &kp N4   &kp N0   &kp N6   &kp N2   &kp N8   &kp N3   &kp N4   &kp N5   &kp N6      &kp N6   &kp N5   &kp N4   &kp N3   &kp N8   &kp N2   &kp N6   &kp N0   &kp N4
            &kp N5   &kp N1   &kp N7   &kp N3   &kp N9            &kp N7   &kp N8   &kp N9      &kp N9   &kp N8   &kp N7            &kp N9   &kp N3   &kp N7   &kp N1   &kp N5
            >;
        };
            // Template for new layer
        trans_layer {
           // ------------------------------------------------------------------------------
           // |    |   |   |   |   |                                   |   |   |   |   |   |
           // |    |   |   |   |   |   |                           |   |   |   |   |   |   |
           // |    |   |   |   |   |   |                           |   |   |   |   |   |   |
           // |    |   |   |   |   |   |                           |   |   |   |   |   |   |
           // |    |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
           // |    |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
           bindings = <
           &trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
           &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
           >;
        };

    };
};
